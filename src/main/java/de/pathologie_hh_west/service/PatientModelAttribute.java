package de.pathologie_hh_west.service;

import de.pathologie_hh_west.model.*;

import java.lang.reflect.Field;
import java.util.Arrays;

/**
 * Created by VaniR on 13.07.2017.
 */
public enum PatientModelAttribute {
	ID, VORNAME, NACHNAME, GEBURTSDATUM, ALTERNATIVNAME, STRASSE, HAUSNUMMER, PLZ, ORT, LAND, EE2011STATUS, EE2011DATUM,
	EE2011REZIDIV_METASTASE, EE2011R, EE2011RDATUM, EE2011RDATUM2, EE2011NOTIZEN, EE2011CHEMO, EE2011RADIATIO,
    EE2011AH, EE2011HAUSARZT, EE2011FRAUENARZT, EE2015PSEUDONYM2, EE2015STATUS, EE2015DATUM, EE2015TODQUELLE, EE2015TODDATUM,
    EE2015NOTIZEN, EE2015WELLE, EE2015RAWID, EE2015SOURCE, EE2015ZEIT, EE2015CHEMO, EE2015CHEMO_ZEITPUNKT,
	EE2015MEDIKAMENTE, EE2015BESTRAHLUNG, EE2015MED_ANTIHORMON, EE2015MED_ANTIHORMON_UNBEKANNT,
	EE2015MED_ANTIHORMON_TAMOXIFEN, EE2015MED_ANTIHORMON_ARIMIDEX, EE2015MED_ANTIHORMON_AROMASIN,
	EE2015MED_ANTIHORMON_FE03A, EE2015HERCEPTIN, EE2015BIOPHOSPHATEN, EE2015BIOPHOSPHATEN_TEXT,
	EE2015WEITERE_ERKRANKUNG, EE2015REZIDIV, EE2015METASTASEN, EE2015METASTASEN_ABRUST, EE2015METASTASEN_LYMPHKNOTEN,
	EE2015METASTASEN_KNOCHEN, EE2015METASTASEN_LUNGE, EE2015METASTASEN_GEHIRN, EE2015METASTASEN_LEBER,
	EE2015METASTASEN_ANDERE, EE2015METASTASEN_ANDERE_TEXT, EE2015REZIDIV_ZEITPUNKT, EE2015HAUSARZT, EE2015FRAUENARZT,
	EE2015ANMERKUNGEN, EE2015INFORMATION, EXPNOTIZEN, EXPCHEMO, EXPTAMOXIFEN, EXPAROMATASEHEMMER, EXPRADATIO,
	EXPTUMORPROGRESS1, EXPTUMORPROGRESS2, EXPSTATUS, EXPDATUM, EXPFOLLOWUP, EXPTODQUELLE, EXPTODDATUM, EXPBEMERKUNG,
	EXPARZT, G, T, N, M, L, V, R, NGESAMT, NMETA, ER, ERIRS, PR, PRIRS, HER2NEU, HER2NEUSCORE,
	KI67, /*INVASION, DUKTAL, LIPIDREICH, SEKRETORISCH, ADENOIDZYSTISCH, GLYKOGENREICH, KRIBRIFORM,
	MIKROPAPILLAER, LOBULAER, MUZINOES, PAPILLAER, PLEOMORPH, TUBULAER, MEDULLAER, METAPLASTISCH,
	INTRAZYSTISCH, INTRADUKTALESPAPILLAERESKARZINOMMITINVASION,*/ BEFUNDTEXT, FALLID, VALUE, ENUMMER, INDEX, BEFUNDTYP, VAN_NUYS, WHO, KI67_PROZENT, DEGREE_OF_TUBULE_FORMATION, NUCLEAR_PLEOMORPHISM, MITOSIS, AUSSCHLUSS, WHO_GRAD_DCIS,
	PSEUDONYM,
	EINGANGSDATUM, EINSENDER, TUMORARTSTRING;
	
	public Class<?> getWrappingClass() {
		Class[] classes = new Class[]{Patient.class, Adresse.class, Exprimage.class, EE2015.class, EE2011.class,
				Fall.class, FallID.class, ENummer.class, Klassifikation.class, TumorArt.class};

        return Arrays.stream(classes)
				.flatMap(clazz -> Arrays.stream(clazz.getDeclaredFields()))
				.filter(fields -> fields.getName().equalsIgnoreCase(this.name()))
				.limit(1)
				.map(Field::getDeclaringClass)
				.findFirst()
				.get();
	}
}
